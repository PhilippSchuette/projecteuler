matrix:
  include:
    - language: python
      python:
        - 3.6
      before_install:
        - cd py_src
      install:
        - pip install -r requirements.txt
      script:
        - coverage run test.py
      after_success:
        - codecov
        - cd ..

    - language: node_js
      node_js:
        - 10.15
      before_install:
        - cd js_src/
      install:
        - npm install
        - npm install -g codecov
        - npm install -g jest
      script:
        - npm run problem001
        - npm run test
      after_success:
        - codecov
        - cd ..

    - language: c
      before_script:
        - cd c_src
      script:
        - make
        - make test
      after_success:
        - bash <(curl -s https://codecov.io/bash)
        - cd ..

    - language: cpp
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - lcov
      before_script:
        - cd cpp_src
        - export CC=gcc-6
        - export CXX=g++-6
        - export GCOV=gcov-6
        - sudo ln -sf /usr/bin/gcov-6 /usr/local/bin/gcov
      script:
        - cmake -DGCOV=ON .
        - make
        - make tests
        - ./tests.out

        # Record coverage with lcov
        - lcov --directory CMakeFiles/tests.dir --capture --output-file coverage.info
        # Get rid of library headers
        - lcov --remove coverage.info '/usr/*' '*/include/Catch2/*' --output-file coverage.info

      after_success:
        # Output data for debugging
        - lcov --list coverage.info
        # Upload to codecov.io
        - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

    - language: rust
      sudo: required
      addons:
        apt:
          packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - cmake
            - gcc
            - binutils-dev
            - libiberty-dev
      before_script:
        - cd rust_src
      after_success:
        - wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
        - tar xzf master.tar.gz
        - cd kcov-master
        - mkdir build
        - cd build
        - cmake ..
        - make
        - make install DESTDIR=../../kcov-build
        - cd ../..
        - rm -rf kcov-master
        - options="1,2,3:9"
        - for file in target/debug/rust_src*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-line=#no_code --exclude-pattern=/.cargo,/usr,/lib64 --verify "target/cov/$(basename $file)" "$file" $options; done
        - for file in target/debug/rust_src*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-line=#no_code --exclude-pattern=/.cargo,/usr,/lib64 --verify "target/cov/$(basename $file)" "$file"; done
        - bash <(curl -s https://codecov.io/bash)
        - echo "Uploaded code coverage"

notifications:
  email: false
