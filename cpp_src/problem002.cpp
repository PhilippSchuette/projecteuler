// Project Euler Problem 002 Solution
//
// Problem statement: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:<p style="text-align:center;">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
//
// Solution description:
//
// Author: Tom Praschan
// 2019/03/06
// License: MIT (see ../LICENSE.md)

#include "problem002.hpp"
#include <omp.h>
#include <fmt/format.h>

#ifndef TESTING
int main(int argc, char **argv) {
    auto start = omp_get_wtime();
    unsigned f1 = 1, f2 = 1, sum = 0;
    while (f2 <= 4000000) {
        auto temp = f2;
        f2 = f1 + f2;
        f1 = temp;
        if (f2 % 2 == 0)
            sum += f2;
    }
    auto end = omp_get_wtime();

    fmt::print("Solution: {} \n", sum);
    fmt::print("Elapsed time: {}s \n", end - start);
}
#endif
